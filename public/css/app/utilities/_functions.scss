// Retrieve a selected color from our $colors palette
@function color($color) {
  @return map-get($colors, $color);
}

// Calculating REM value. Adding px fallback in post-processor
@function rem($values) {
  // Create a couple of empty lists as output buffers.
  $base-font-size: 16px; // should be consistent with your html/body font-size
  $rem-values: ();

  // Loop through the $values list
  @each $value in $values {
    // For each property value, if it's in rem or px, derive both rem and
    // px values for it and add those to the end of the appropriate buffer.
    // Ensure all pixel values are rounded to the nearest pixel.
    @if $value == 0 or $value == 0px {
      // 0 -- use it without a unit
      $rem-values: join($rem-values, 0);
    } @else if type-of($value) == number and not unitless($value) and (unit($value) == px) {
      // px value given - calculate rem value from base-font-size
      $new-rem-value: $value / $base-font-size;
      $rem-values: join($rem-values, #{$new-rem-value}rem);
    } @else {
      // unitless value - use those directly as rem and calculate the px-fallback
      $rem-values: join($rem-values, #{$value}rem);
    }
  }

  @return $rem-values;
}

@function em($pixelBasedNum) {
  @return $pixelBasedNum / 18px * 1em
}
